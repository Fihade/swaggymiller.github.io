<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MillerLiang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-21T03:06:00.322Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>✌ECC算法调研</title>
    <link href="http://yoursite.com/2018/11/10/ECC%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/"/>
    <id>http://yoursite.com/2018/11/10/ECC算法调研/</id>
    <published>2018-11-10T01:52:23.819Z</published>
    <updated>2018-12-21T03:06:00.322Z</updated>
    
    <content type="html"><![CDATA[<p>Ecc算法这里我采用了Matlab来进行加密算法的验证：</p><h4 id="代码结构："><a href="#代码结构：" class="headerlink" title="代码结构："></a>代码结构：</h4><p>madfrac.m 代码：</p><p>在这里我实现的是分数的模运算函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Add.m</p><p>在这里定义了在椭圆里面两个点的加法运算</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[ resx,resy ]</span> = <span class="title">Add</span><span class="params">( a,b,p,x1,y1,x2,y2 )</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> x1==x2 &amp;&amp; y1==y2</span><br><span class="line">    k=modfrac(<span class="number">3</span>*x1^<span class="number">2</span>+a,<span class="number">2</span>*y1,p);</span><br><span class="line">    resx = <span class="built_in">mod</span>(k^<span class="number">2</span>-x1-x2,p);</span><br><span class="line">    resy = <span class="built_in">mod</span>(k*(x1-resx)-y1,p);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> x1==x2 &amp;&amp; y1~=y2</span><br><span class="line">    resx = <span class="built_in">inf</span>;</span><br><span class="line">    resy = <span class="built_in">inf</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> x1 ~= x2</span><br><span class="line">    k=modfrac(y2-y1,x2-x1,p);</span><br><span class="line">    resx = <span class="built_in">mod</span>(k^<span class="number">2</span>-x1-x2,p);</span><br><span class="line">    resy = <span class="built_in">mod</span>(k*(x1-resx)-y1,p);    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>NP.m</p><p>采用递归累加的方法进行常量的乘法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[resx,resy]</span> = <span class="title">NP</span><span class="params">( a,b,p,n,x,y )</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n ==<span class="number">1</span></span><br><span class="line">    resx = x;</span><br><span class="line">    resy = y;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> n&gt;=<span class="number">2</span></span><br><span class="line">    [xsub,ysub]=NP(a,b,p,n<span class="number">-1</span>,x,y);</span><br><span class="line">    <span class="keyword">if</span> xsub==Inf &amp;&amp; ysub == Inf </span><br><span class="line">        resx=Inf;</span><br><span class="line">        resy=Inf;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        [resx,resy]=Add(a,b,p,x,y,xsub,ysub);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>ECC.m</p><ol><li>Alice选定一条椭圆曲线<code>E</code>，并取椭圆曲线上一点作为基点<code>G</code> 假设选定的椭圆为<code>a=4,b=20,p=29</code>所示示的椭圆，基点<code>G(13,23)</code> , 基点<code>G</code>的阶数<code>n=37</code>（阶数的概念本文没提,你可以理解为在进行常量乘法运算的时候常量的最大值要小于<code>n</code> ）</li><li>Alice选择一个私有密钥<code>k（k&lt;n）</code>并生成公开密钥<code>K=kG</code> 比如<code>k=25, K= kG = 25G = (14,6）</code>(使用我们的乘法运算函数去测试一下）</li><li>Alice将<code>E</code>和点<code>K</code>、<code>G</code>传给Bob （ 这没什么说的，<code>E,K,G</code> 共同组成了公钥，需要把公钥发给对方）</li><li>Bob收到信息后，将待传输的明文编码到上的一点M（编码方法略），并产生一个随机整数<code>r（r&lt;n,n为G的阶数）</code> 假设<code>r=6</code> 要加密的信息为3,因为该信息也需要满足曲线方程<code>E</code>，所以我们很容易能够选取到一点<code>(3,28)</code>（其他的点如<code>(3,1)</code>也是可以的）</li><li>Bob计算点<code>C1=M+rK</code>和<code>C2=rG</code></li><li>Bob将C1、C2传给Alice（容易理解，将加密信息传回给Bob，由Bob解密以知道Alice给他传的是啥）</li><li>Alice收到信息后，计算<code>C1-kC2</code>得到的结果应该是<code>(3,28)</code> （解密过程）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">a=4;</span><br><span class="line">b=20;</span><br><span class="line">p=29;</span><br><span class="line">GX=13;</span><br><span class="line">GY=23;</span><br><span class="line">k=25;</span><br><span class="line">[KX,KY]=NP(a,b,p,k,GX,GY)</span><br><span class="line"></span><br><span class="line">r=6</span><br><span class="line"></span><br><span class="line">MX = 3</span><br><span class="line">MY = 28</span><br><span class="line"></span><br><span class="line">[rKX,rKY] = NP(a,b,p,r,KX,KY)</span><br><span class="line"></span><br><span class="line">[C1X,C1Y]=Add(a,b,p,MX,MY,rKX,rKY)</span><br><span class="line"></span><br><span class="line">[C2X,C2Y]=NP(a,b,p,r,GX,GY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[kC2X,kC2Y]=NP(a,b,p,k,C2X,C2Y);</span><br><span class="line"></span><br><span class="line">kC2Y=mod(-1*kC2Y,p)</span><br><span class="line"></span><br><span class="line">[resx,resy]=Add(a,b,p,C1X,C1Y,kC2X,kC2Y)</span><br></pre></td></tr></table></figure><h4 id="运算结果："><a href="#运算结果：" class="headerlink" title="运算结果："></a>运算结果：</h4><p><img src="C:\Users\swaggymiller\Desktop\TIM截图20181016202303.png" alt=""></p><p>根据结果显示：<code>resx=3,resy=28</code>这里的3正是Bob给Alice传的数字内容，其他人因为没有私钥<code>k</code>所以无法像Alice那样简单地还原出数字3</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ecc算法这里我采用了Matlab来进行加密算法的验证：&lt;/p&gt;
&lt;h4 id=&quot;代码结构：&quot;&gt;&lt;a href=&quot;#代码结构：&quot; class=&quot;headerlink&quot; title=&quot;代码结构：&quot;&gt;&lt;/a&gt;代码结构：&lt;/h4&gt;&lt;p&gt;madfrac.m 代码：&lt;/p&gt;
&lt;p&gt;在
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>😂多蓝牙连接说明文档</title>
    <link href="http://yoursite.com/2018/08/11/%E5%A4%9A%E8%93%9D%E7%89%99%E8%BF%9E%E6%8E%A5%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3%EF%BC%9A/"/>
    <id>http://yoursite.com/2018/08/11/多蓝牙连接说明文档：/</id>
    <published>2018-08-11T11:55:03.469Z</published>
    <updated>2018-12-21T03:06:54.790Z</updated>
    
    <content type="html"><![CDATA[<p>一、参数前提：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BluetoothAdapter mBluetoothAdapter</span><br><span class="line">BluetoothManager bluetoothManager</span><br><span class="line">BleLink bleLink</span><br><span class="line">ArrayMap&lt;String, BleLink&gt; bleLinks = new ArrayMap&lt;&gt;()</span><br><span class="line">ArrayList&lt;ArrayMap&lt;String, String&gt;&gt; listData = new ArrayList&lt;&gt;()</span><br><span class="line">ArrayMap&lt;String, ArrayMap&gt; address = new ArrayMap&lt;&gt;()</span><br><span class="line">LinkBlueTooth mlinkbluetooth</span><br></pre></td></tr></table></figure><p>二、相关接口：</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public boolean StartScan(String name, int timeout)</span><br></pre></td></tr></table></figure></li></ul><p>String name  扫描蓝牙名</p><p>int timeout   可以设置延迟（这里没有引用）</p><p>通过循环获取蓝牙名为（”addr “）的蓝牙，加入至bleLink队列</p><p>返回值是否扫描成功</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public boolean LinkDevice(String addr)</span><br></pre></td></tr></table></figure></li></ul><p>连接设备并返回值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String addr = listData.get(position).get(&quot;addr&quot;);</span><br><span class="line"> if (bleLinks.containsKey(addr)) &#123;</span><br><span class="line">     int idNum = bleLinks.get(addr).id;</span><br><span class="line">     bleLinks.get(addr).dislink();</span><br><span class="line">     bleLinks.remove(addr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配数据表中的(“addr”)的相关设备，当多于2个时删除之前队列</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public void DislinkDevice(String addr)</span><br></pre></td></tr></table></figure></li></ul><p>断连设备</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public int GetDeviceState()</span><br></pre></td></tr></table></figure></li></ul><p>获取设备状态（连接/未连接/无法连接）</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public boolean SendData(byte[] data)</span><br></pre></td></tr></table></figure></li></ul><p>发送数据最多128bit的数据</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public byte[] ReceiveData()</span><br></pre></td></tr></table></figure></li></ul><p>获取数据，同上</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public void OnDeviceStateChanged(BleLink bleLink, BleDeviceState state)</span><br></pre></td></tr></table></figure></li></ul><p>查看设备所处状态的变化</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、参数前提：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>📗数据结构</title>
    <link href="http://yoursite.com/2018/05/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2018/05/20/数据结构/</id>
    <published>2018-05-20T07:41:01.082Z</published>
    <updated>2018-04-07T14:42:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 10</span></span><br></pre></td></tr></table></figure><h3 id="Q1-寻找集合A和B相交部分以及A-B的部分"><a href="#Q1-寻找集合A和B相交部分以及A-B的部分" class="headerlink" title="Q1:寻找集合A和B相交部分以及A-B的部分"></a>Q1:寻找集合A和B相交部分以及A-B的部分</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A - B 功能</span></span><br><span class="line"><span class="function">link <span class="title">AjianB</span><span class="params">(link A, link B)</span> </span>&#123;</span><br><span class="line">  link fromA, fromB, r;</span><br><span class="line">  fromA = A;</span><br><span class="line">  r = A;</span><br><span class="line">  fromB = B-&gt;next;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 寻找相同部分</span></span><br><span class="line">  <span class="keyword">while</span> (fromA) &#123;</span><br><span class="line">    <span class="keyword">while</span> (fromB) &#123;</span><br><span class="line">      <span class="comment">// 删除A</span></span><br><span class="line">      <span class="keyword">if</span> (fromA-&gt;next-&gt;num == fromB-&gt;num) &#123;</span><br><span class="line">        r = fromA-&gt;next;</span><br><span class="line">        fromA-&gt;next = r-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(r);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fromB = fromB-&gt;next;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fromB = B-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (fromA-&gt;next)</span><br><span class="line">      fromA = fromA-&gt;next;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      fromA-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> fromA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AB相同</span></span><br><span class="line"><span class="function">link <span class="title">AWithSameB</span><span class="params">(link A, link B)</span> </span>&#123;</span><br><span class="line">  link C, p, q, r, s;</span><br><span class="line">  p = A-&gt;next;</span><br><span class="line">  q = B-&gt;next;</span><br><span class="line"></span><br><span class="line">  C = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">  C-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">  r = C;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 寻找AB相同的部分</span></span><br><span class="line">  <span class="keyword">while</span> (p) &#123;</span><br><span class="line">    <span class="keyword">while</span> (q) &#123;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">if</span> (p-&gt;num == q-&gt;num) &#123;</span><br><span class="line">        </span><br><span class="line">        link temp;</span><br><span class="line">        temp = C-&gt;next;</span><br><span class="line">        <span class="keyword">while</span> (temp &amp;&amp; temp-&gt;num != p-&gt;num) &#123;</span><br><span class="line">          temp = temp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp != <span class="literal">NULL</span>) &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 添加到C中</span></span><br><span class="line">          s = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">          r-&gt;next = s;</span><br><span class="line">          s-&gt;num = p-&gt;num;</span><br><span class="line">          s-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">          r = s;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        q = q-&gt;next;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    q = B-&gt;next;</span><br><span class="line">    p = p-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入链表A:"</span>;</span><br><span class="line">  link A = createLinkedLine();</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入链表B:"</span>;</span><br><span class="line">  link B = createLinkedLine();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">" A:\n"</span>;</span><br><span class="line">  printLinkedLine(A);</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">" B:\n"</span>;</span><br><span class="line">  printLinkedLine(B);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"A - B = "</span>;</span><br><span class="line">  printLinkedLine(AjianB(A, B));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"A jiao B = "</span>;</span><br><span class="line">  printLinkedLine(AWithSameB(A, B));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q2-根据学生记录表进行插入删除"><a href="#Q2-根据学生记录表进行插入删除" class="headerlink" title="Q2 : 根据学生记录表进行插入删除"></a>Q2 : 根据学生记录表进行插入删除</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">studentNode</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> No;</span><br><span class="line">  <span class="keyword">char</span> Sno[<span class="number">20</span>];</span><br><span class="line">  <span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line">  <span class="keyword">int</span> sex;</span><br><span class="line">  <span class="keyword">char</span> Class[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">studentNode</span> <span class="title">StuDentNode</span>;</span></span><br><span class="line"><span class="comment">// 根据学号删除节点</span></span><br><span class="line"><span class="function">StuDentNode *<span class="title">deleteTable</span><span class="params">(StuDentNode *stutab, <span class="keyword">char</span> *theSno, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(stutab[i].Sno, theSno) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; len - i; j++) &#123;</span><br><span class="line">        stutab[j] = stutab[j + <span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stutab;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合适的位置插入数据</span></span><br><span class="line"><span class="function">StuDentNode *<span class="title">insertTable</span><span class="params">(StuDentNode *stutab, StuDentNode x, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="comment">// StuDentNode thisNode = stutab[i];</span></span><br><span class="line">    <span class="keyword">if</span> (stutab[i].No &gt; x.No) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; len - i; j++) &#123;</span><br><span class="line">        StuDentNode item = stutab[j];</span><br><span class="line">        stutab[j] = x;</span><br><span class="line">        x = item;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stutab;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  StuDentNode stuTable[<span class="number">20</span>] = &#123;&#123;<span class="number">1</span>, <span class="string">"J0001"</span>, <span class="string">"丁一"</span>, <span class="number">1</span>, <span class="string">"计02"</span>&#125;,</span><br><span class="line">                              &#123;<span class="number">2</span>, <span class="string">"J0002"</span>, <span class="string">"王二"</span>, <span class="number">0</span>, <span class="string">"计02"</span>&#125;,</span><br><span class="line">                              &#123;<span class="number">3</span>, <span class="string">"J0003"</span>, <span class="string">"张三"</span>, <span class="number">1</span>, <span class="string">"计02"</span>&#125;,</span><br><span class="line">                              &#123;<span class="number">32</span>, <span class="string">"J0032"</span>, <span class="string">"李四"</span>, <span class="number">1</span>, <span class="string">"计02"</span>&#125;&#125;;  </span><br><span class="line">  StuDentNode newStudent = &#123;<span class="number">4</span>, <span class="string">"J0004"</span>, <span class="string">"王四"</span>, <span class="number">1</span>, <span class="string">"计02"</span>&#125;;</span><br><span class="line"></span><br><span class="line">  insertTable(stuTable, newStudent, <span class="number">20</span>);</span><br><span class="line">  deleteTable(stuTable, <span class="string">"J0005"</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q3-查找链表"><a href="#Q3-查找链表" class="headerlink" title="Q3 : 查找链表"></a>Q3 : 查找链表</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Item;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">  Item num;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; linkNode, *link;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入</span></span><br><span class="line"><span class="function">link <span class="title">createLinkedLineNum</span><span class="params">(<span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> DATA;</span><br><span class="line">  link firstNode = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">  link thisNode = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;DATA);</span><br><span class="line">  firstNode-&gt;num = DATA;</span><br><span class="line">  firstNode-&gt;next = thisNode;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    link nextNode = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;DATA);</span><br><span class="line">    thisNode-&gt;num = DATA;</span><br><span class="line">    thisNode-&gt;next = nextNode;</span><br><span class="line"></span><br><span class="line">    thisNode = nextNode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  thisNode-&gt;next = firstNode;</span><br><span class="line">  <span class="keyword">return</span> firstNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printLinkedLine</span><span class="params">(link tag)</span> </span>&#123;</span><br><span class="line">  link n = tag;</span><br><span class="line">  <span class="keyword">while</span> (n-&gt;next) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, n-&gt;num);</span><br><span class="line">    n = n-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(link TABLE, link start, <span class="keyword">int</span> tag)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  link thisNode = (link)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkNode));</span><br><span class="line">  thisNode = start;</span><br><span class="line">  <span class="keyword">while</span> (thisNode-&gt;num != tag) &#123;</span><br><span class="line">    thisNode = thisNode-&gt;next;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"查找结点"</span>, tag, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  link resNode = createLinkedLineNum(<span class="number">10</span>);</span><br><span class="line">  search(resNode, resNode, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q4-判断链表是否相等"><a href="#Q4-判断链表是否相等" class="headerlink" title="Q4 : 判断链表是否相等"></a>Q4 : 判断链表是否相等</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Item;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">  Item num;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; linkNode, *link;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">equal</span><span class="params">(link LA, link LB)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (LA &amp;&amp; LB) &#123;</span><br><span class="line">    <span class="keyword">if</span> (LA-&gt;num != LB-&gt;num) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LA = LA-&gt;next;</span><br><span class="line">    LB = LB-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>((LA &amp;&amp; !LB) || (LB &amp;&amp; !LA)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"输入链表A"</span>);</span><br><span class="line">  link LA = createLinkedLine();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"输入链表B"</span>);</span><br><span class="line">  link LB = createLinkedLine();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"是否相等"</span>, equal(LA,LB));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q5-出栈与入栈"><a href="#Q5-出栈与入栈" class="headerlink" title="Q5 : 出栈与入栈"></a>Q5 : 出栈与入栈</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 10 </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个栈结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> num[MAXSIZE];</span><br><span class="line">  <span class="keyword">int</span> top;</span><br><span class="line">&#125; sqstack, *sqslink;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进栈方法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">push</span><span class="params">(sqslink s, <span class="keyword">int</span> tag )</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &gt;= MAXSIZE - <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s-&gt;top++;</span><br><span class="line">s-&gt;num[s-&gt;top] = tag;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈方法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &lt; <span class="number">0</span> )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s-&gt;top--;</span><br><span class="line"><span class="keyword">return</span> s-&gt;num[s-&gt;top+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getstop</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> s-&gt;num[s-&gt;top];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印输出栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printStack</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;MAXSIZE;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;getstop(s)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">sqslink <span class="built_in">stack</span> = (sqslink)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">push(<span class="built_in">stack</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">  printStack(<span class="built_in">stack</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q6-判断表对称"><a href="#Q6-判断表对称" class="headerlink" title="Q6 : 判断表对称"></a>Q6 : 判断表对称</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 10</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个栈结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> num[MAXSIZE];</span><br><span class="line">  <span class="keyword">int</span> top;</span><br><span class="line">&#125; sqstack, *sqslink;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进栈方法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">push</span><span class="params">(sqslink s, <span class="keyword">int</span> tag )</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &gt;= MAXSIZE - <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s-&gt;top++;</span><br><span class="line">s-&gt;num[s-&gt;top] = tag;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈方法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &lt; <span class="number">0</span> )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s-&gt;top--;</span><br><span class="line"><span class="keyword">return</span> s-&gt;num[s-&gt;top+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getstop</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> s-&gt;num[s-&gt;top];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印输出栈</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printStack</span><span class="params">(sqslink s)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;MAXSIZE;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;getstop(s)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sqslink <span class="built_in">stack</span> = (sqslink)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack));</span><br><span class="line">    <span class="keyword">int</span> data[MAXSIZE],n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入链表长度"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入表中每个元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//循环输入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;data+i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((n%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; j &lt;= n/<span class="number">2</span> )||(n%<span class="number">2</span> != <span class="number">0</span> &amp;&amp; j &lt;= n/<span class="number">2</span> ) )&#123;</span><br><span class="line">            push(<span class="built_in">stack</span>,*(data+j));</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((n % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; j &gt; n / <span class="number">2</span>) || (n % <span class="number">2</span> != <span class="number">0</span> &amp;&amp; j &gt; ((n/<span class="number">2</span>)+<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">if</span>(data[j] != getstop(<span class="built_in">stack</span>))&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"不对称"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"对称"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Q7-压缩矩阵"><a href="#Q7-压缩矩阵" class="headerlink" title="Q7:压缩矩阵"></a>Q7:压缩矩阵</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NumNode</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">NumNode</span> <span class="title">numNode</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>][<span class="number">5</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>&#125;,</span><br><span class="line">   &#123;<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>&#125;,</span><br><span class="line">   &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">0</span>&#125;,</span><br><span class="line">   &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>&#125;,</span><br><span class="line">   &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">7</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> cunchu[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            cunchu[k] = a[i][j];</span><br><span class="line">            k++;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;cunchu&lt;&lt;endl;</span></span><br><span class="line">    numNode a1 [<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">int</span> k1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> iszero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> notzero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] !=<span class="number">0</span>)&#123;</span><br><span class="line">               a1[k1].num = a[i][j];</span><br><span class="line">               a1[k1].x = i;</span><br><span class="line">               a1[k1].y = j;</span><br><span class="line">               <span class="comment">//cout&lt;&lt;"a1.num = "&lt;&lt;a[i][j]&lt;&lt;endl;</span></span><br><span class="line">               k1++;</span><br><span class="line">               notzero++; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                iszero++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;"a1 = "&lt;&lt;a1&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"非零个数："</span>&lt;&lt;notzero&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"为零个数："</span>&lt;&lt;iszero&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三元组表："><a href="#三元组表：" class="headerlink" title="三元组表："></a>三元组表：</h2><p><img src="/images/Group2.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>📙学习Markdown的语法</title>
    <link href="http://yoursite.com/2018/05/20/%E5%AD%A6%E4%B9%A0Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/05/20/学习Markdown语法/</id>
    <published>2018-05-20T07:41:01.067Z</published>
    <updated>2018-06-02T08:55:57.296Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开头请不要加注释，后有点迷……</p></blockquote><p>##1.关于标题的用法<br>   两种形式<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p><blockquote><p>一级标题<br><code>=========</code><br>二级标题<br><code>---------</code></p></blockquote><p>效果：</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题   "></a>一级标题   </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>2）使用<code>#</code>，可表示1-6级标题。<br># 一级标题<br>## 二级标题<br>### 三级标题   </p></blockquote><p>效果：</p><blockquote><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></blockquote><h2 id="2-关于段落"><a href="#2-关于段落" class="headerlink" title="2. 关于段落"></a>2. <b>关于段落</b></h2><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p><h2 id="3-关于区块的用法"><a href="#3-关于区块的用法" class="headerlink" title="3. 关于区块的用法"></a>3. <b>关于区块的用法</b></h2><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p><blockquote><p>> 区块引用<br>>&gt; 嵌套引用</p></blockquote><p>效果：</p><blockquote><p>区块引用  </p><blockquote><p>嵌套引用</p></blockquote></blockquote><h2 id="4-关于代码块的用法"><a href="#4-关于代码块的用法" class="headerlink" title="4. 关于代码块的用法"></a>4. <b>关于代码块的用法</b></h2><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样)</p><p>void main()<br>{<br>    printf(“Hello, Markdown.”);<br>}  </p><p>效果：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    printf(<span class="string">"Hello Markdown ~"</span>)   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-关于文本强调的用法"><a href="#4-关于文本强调的用法" class="headerlink" title="4. 关于文本强调的用法"></a>4. <b>关于文本强调的用法</b></h2><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p><blockquote><p>*斜体*，_斜体_<br>**粗体**，__粗体__</p></blockquote><p>效果：</p><blockquote><p><em>斜体</em>，_斜体_<br><strong>粗体</strong>，<strong>粗体</strong></p></blockquote><h2 id="5-关于列表的用法"><a href="#5-关于列表的用法" class="headerlink" title="5. 关于列表的用法"></a>5. <b>关于列表的用法</b></h2><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p><blockquote><p>-（+*） 第一项<br>-（+*） 第二项<br>- （+*）第三项</p></blockquote><p><strong>注意</strong>：标记后面最少有一个_空格_或<em>制表符</em>。若不在引用区块中，必须和前方段落之间存在空行。</p><p>效果：</p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p><blockquote><p>1 . 第一项<br>2 . 第二项<br>3 . 第三项</p></blockquote><p>效果:</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><p>##6.<b>关于分隔符的用法</b><br>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p><h2 id="7-关于链接的用法"><a href="#7-关于链接的用法" class="headerlink" title="7. 关于链接的用法"></a>7. <b>关于链接的用法</b></h2><p>一般为：</p><blockquote><p>[MillerLiang的博客地址👉] (millerliang.me)</p></blockquote><p>效果为：</p><p><a href="millerliang.me">MillerLiang的博客地址👉</a></p><h2 id="8-关于插入图片的用法"><a href="#8-关于插入图片的用法" class="headerlink" title="8.关于插入图片的用法"></a>8.<b>关于插入图片的用法</b></h2><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code></p><p>一般为：</p><blockquote><p><img src="/themes/apollo/lblogo.png" alt="LB的Logo"></p></blockquote><p>效果：</p><p><img src="/themes/apollo/lblogo.png" alt="LB的Logo"></p><h2 id="9-关于一些符号的用法"><a href="#9-关于一些符号的用法" class="headerlink" title="9.关于一些符号的用法"></a>9.<b>关于一些符号的用法</b></h2><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p><h4 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠\"></a>反斜杠<code>\</code></h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p><h4 id="符号’-’"><a href="#符号’-’" class="headerlink" title="符号’`’"></a>符号’`’</h4><p>起到标记作用。如：</p><blockquote><p>`ctrl+a`</p></blockquote><p>效果：</p><blockquote><p><code>ctrl+a</code> </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;开头请不要加注释，后有点迷……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;##1.关于标题的用法&lt;br&gt;   两种形式&lt;br&gt;1）使用&lt;code&gt;=&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;标记一级和二级标题。&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>📟Json/Http相关记录</title>
    <link href="http://yoursite.com/2018/05/20/json%20%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/20/json 学习/</id>
    <published>2018-05-20T07:41:01.035Z</published>
    <updated>2018-05-04T02:50:34.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>⌛一直会不定期更一下…<br>上一个开始学习android端的json方面的相关知识，学了近两个周，因为每天要上课，所以会断断续续，接下来我想记录一下最近的学习成果以及 check in 一下。</p></blockquote><h3 id="关于Json"><a href="#关于Json" class="headerlink" title="关于Json"></a>关于Json</h3><blockquote><p>Json 是一种轻量级的数据交换格式,对于我而言它更像是一种用来存储数据的某种结构，在 Android 中能够通过给定的相关类，调用相关方法，可以达到获取数据，响应数据的效果。</p></blockquote><h2 id="Json相关信息"><a href="#Json相关信息" class="headerlink" title="Json相关信息"></a>Json相关信息</h2><blockquote><p>针对于Json来说万事万物都是对象，每个对象都会以键值对的形式来表达（不过对与 key 加双引号有点不太适应🙃），所以Json涉及一些语法</p><ul><li>对象表示为键值对</li><li>数据由逗号分隔</li><li>花括号保存对象</li><li>方括号保存数组</li></ul></blockquote><h2 id="了解这些帮助我们可以在获取Json值的时候，选择正确的存储结构"><a href="#了解这些帮助我们可以在获取Json值的时候，选择正确的存储结构" class="headerlink" title="了解这些帮助我们可以在获取Json值的时候，选择正确的存储结构"></a>了解这些帮助我们可以在获取Json值的时候，选择正确的存储结构</h2><h2 id="在Android开发中使用"><a href="#在Android开发中使用" class="headerlink" title="在Android开发中使用"></a>在Android开发中使用</h2><p>关于Http请求(<b>makeHttpRequest(URL url)</b>)：</p><blockquote><p>刚开始我们需要一些相关变量，所以我在这里先定义了☺</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String jsonResponse = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">if</span> (url == <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> jsonResponse;</span><br><span class="line">&#125;</span><br><span class="line">HttpURLConnection urlConnection = <span class="keyword">null</span>;</span><br><span class="line">InputStream inputStream = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><blockquote><ul><li>需要构造url,将String类型的url地址转换成URL类型（catch….throws方法…）</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//辅助新方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> URL <span class="title">creatUrl</span><span class="params">(String stringUrl)</span></span>&#123;</span><br><span class="line">    URL url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">       url = <span class="keyword">new</span> URL(stringUrl);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">        Log.i(<span class="string">"tag"</span>,<span class="string">"Problem about the URL"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>构造HttpRequest请求，将上一步的URL传参，构造实例化HttpURLConnection urlConnection</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HttpURLConnection urlConnection = <span class="keyword">null</span>;</span><br><span class="line">InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">      urlConnection = (HttpURLConnection) url.openConnection(); <span class="comment">//打开连接</span></span><br><span class="line">      urlConnection.setReadTimeout(<span class="number">10000</span>);                      <span class="comment">//读取时间延迟</span></span><br><span class="line">      urlConnection.setConnectTimeout(<span class="number">15000</span>);                   <span class="comment">//连接时间延迟</span></span><br><span class="line">      urlConnection.setRequestMethod(<span class="string">"GET"</span>);                    <span class="comment">//请求方法“GET”</span></span><br><span class="line">      urlConnection.connect();                                  <span class="comment">//连接</span></span><br></pre></td></tr></table></figure><blockquote><p>\3. 判断获取连接之后返回的值getResponseCode判断是否连接成功，在http链接中一般返回200为连接成功，然后就需要通过上一步中的urlconnection进行先获取</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求成功响应200</span></span><br><span class="line"><span class="comment">//然后读取输入流数据</span></span><br><span class="line"><span class="keyword">if</span>(urlConnection.getResponseCode() == <span class="number">200</span>)&#123;</span><br><span class="line">      ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>4.当我们连接成功以后，这时候我们就可以从URl里面获取一些数据，这个时候需要用到之前的变量inputstream,inputstream作为一个抽象类，相当于“引源 ”的作用，标志多种类型的数据，然后调用.getinputstream方法，标记所有从url的信息，然后调用方法开始 “ 读取数据 ”了（inputstream 相当于压缩过的数据，依然需要我们再次解析</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//然后读取输入流数据</span></span><br><span class="line"><span class="keyword">if</span>(urlConnection.getResponseCode() == <span class="number">200</span>)&#123;</span><br><span class="line">      inputStream = urlConnection.getInputStream();</span><br><span class="line">      jsonResponse = readFromStream(inputStream);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>5.这时inputstream之后，需要读取输入流数据，转换成jsong数据格式类型，需要用到静态抽象类BufferedReader来从字符输入流中读取文本，缓冲各个字符，从而实现字符、数组和行的高效读取（这句话摘抄的☺</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取输入流数据</span></span><br><span class="line"><span class="comment">//转换为包含json数据的格式</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">readFromStream</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       StringBuilder output = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">       <span class="keyword">if</span>(inputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">           InputStreamReader inputStreamReader = <span class="keyword">new</span> InputStreamReader(inputStream , Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line">           BufferedReader reader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">           String line = reader.readLine();</span><br><span class="line">           <span class="keyword">while</span>(line != <span class="keyword">null</span>)&#123;</span><br><span class="line">               <span class="comment">//apend()连接数据</span></span><br><span class="line">               line = reader.readLine();</span><br><span class="line">               output.append(line);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> output.toString();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>对于json来说，首先需要了解整个json的文件格式，例如</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"FeatureCollection"</span>,</span><br><span class="line">  <span class="attr">"metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"generated"</span>: <span class="number">1523110898000</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://earthquake.usgs.gov/fdsnws/event/1/query?starttime=2018-03-10&amp;endtime=2018-03-12&amp;format=geojson"</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"USGS Earthquakes"</span>,</span><br><span class="line">    <span class="attr">"status"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">"api"</span>: <span class="string">"1.5.8"</span>,</span><br><span class="line">    <span class="attr">"count"</span>: <span class="number">737</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"features"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"Feature"</span>,</span><br><span class="line">      <span class="attr">"properties"</span>: &#123;</span><br><span class="line">        <span class="attr">"mag"</span>: <span class="number">0.4</span>,</span><br><span class="line">        <span class="attr">"place"</span>: <span class="string">"10km NNW of Incline Village, Nevada"</span>,</span><br><span class="line">        <span class="attr">"time"</span>: <span class="number">1520812711481</span>,</span><br><span class="line">        <span class="attr">"updated"</span>: <span class="number">1520820364368</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>6.对于第5步获取的json格式的数据，通过创建json响应字符获取数组，其次获取对应的元素信息，在下面的代码可以看到首先用了JSONArray数组来存储整个Json数据的所有键值对，用JSONObject对象调用getJSONObject获取Json数据的对应值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Earthquake&gt; <span class="title">extractFeatureFromJson</span><span class="params">(String  earthquakeJSON)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//如果json为null提前返回</span></span><br><span class="line">       <span class="keyword">if</span>(TextUtils.isEmpty(earthquakeJSON))&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       List&lt;Earthquake&gt; earthquakes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           <span class="comment">//通过json响应字符创建jsonobject</span></span><br><span class="line">           JSONObject baseJsonResponse = <span class="keyword">new</span> JSONObject(earthquakeJSON);</span><br><span class="line">           <span class="comment">//提取关键字“feature”的键值，构成Array数组</span></span><br><span class="line">           JSONArray earthquakeArray = baseJsonResponse.getJSONArray(<span class="string">"features"</span>);</span><br><span class="line">           <span class="comment">//遍历循环Array中的每一个元素，获取信息</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">0</span>; i&lt;earthquakeArray.length();i++)&#123;</span><br><span class="line">               <span class="comment">//实例化一个jsonobject的对象</span></span><br><span class="line">               JSONObject currentEarthquake = earthquakeArray.getJSONObject(i);</span><br><span class="line">               <span class="comment">//创建对象获取properties下的值，下面得到值均在“properties”下面</span></span><br><span class="line">               JSONObject properties = currentEarthquake.getJSONObject(<span class="string">"properties"</span>);</span><br><span class="line">               <span class="comment">//获取magnitude的值</span></span><br><span class="line">               <span class="keyword">double</span> magnitude = properties.getDouble(<span class="string">"mag"</span>);</span><br><span class="line">               <span class="comment">//获取location的值</span></span><br><span class="line">               String location = properties.getString(<span class="string">"place"</span>);</span><br><span class="line">               <span class="comment">//获取time的值</span></span><br><span class="line">               <span class="keyword">long</span> time = properties.getLong(<span class="string">"time"</span>);</span><br><span class="line">               <span class="comment">//获取url的值</span></span><br><span class="line">               String url = properties.getString(<span class="string">"url"</span>);</span><br><span class="line">               <span class="comment">//创建新的Earthquake对象</span></span><br><span class="line">               Earthquake earthquake = <span class="keyword">new</span> Earthquake(magnitude,location,time,url);</span><br><span class="line"></span><br><span class="line">               <span class="comment">//将新的earthquake对象添加到列表中</span></span><br><span class="line">               earthquakes.add(earthquake);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line"></span><br><span class="line">           Log.e(<span class="string">"QueryUtils"</span>, <span class="string">"Problem parsing the earthquake JSON results"</span>, e);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Return the list of earthquakes</span></span><br><span class="line">       <span class="keyword">return</span> earthquakes;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>7.最后的最后将上面的四个函数需要我们整合在一起，建立一个名为fetchData（String requesturl）函数，将这些函数的返回值一一对应，return回一个自己所需要的储存数据的数据类型，在这里我返回了一个List&lt;&gt;类型的数据列表，并且髓外开放为public类型的函数</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//该方法将所有步骤连接在一起，唯一的public函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  List&lt;Earthquake&gt; <span class="title">fetchEarthquakeData</span><span class="params">(String requestUrl)</span></span>&#123;</span><br><span class="line">    <span class="comment">//创建url对象</span></span><br><span class="line">    URL url = creatUrl(requestUrl);</span><br><span class="line">    <span class="comment">//执行url的http请求并返回json响应</span></span><br><span class="line">    String jsonResponse = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        jsonResponse = makeHttpRequest(url);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        Log.e(LOG_TAG,<span class="string">"Problem about makehttpRequest"</span>,e);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//从json响应数据提取相关信息并创建列表</span></span><br><span class="line">    List&lt;Earthquake&gt; earthquakes = extractFeatureFromJson(jsonResponse);</span><br><span class="line">    <span class="comment">//return 列表</span></span><br><span class="line">    <span class="keyword">return</span> earthquakes;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="以后有新的体会再来更新👺"><a href="#以后有新的体会再来更新👺" class="headerlink" title="以后有新的体会再来更新👺"></a>以后有新的体会再来更新👺</h2><h3 id="Stop-stoping"><a href="#Stop-stoping" class="headerlink" title="Stop stoping"></a>Stop stoping</h3><h3 id="开始看Gson和FastJson"><a href="#开始看Gson和FastJson" class="headerlink" title="开始看Gson和FastJson"></a>开始看Gson和FastJson</h3><h3 id="接上一条，看完了-ง-•-•-ง"><a href="#接上一条，看完了-ง-•-•-ง" class="headerlink" title="接上一条，看完了/(ง •_•)ง/"></a>接上一条，看完了/(ง •_•)ง/</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;⌛一直会不定期更一下…&lt;br&gt;上一个开始学习android端的json方面的相关知识，学了近两个周，因为每天要上课，所以会断断续续，接下来我想记录一下最近的学习成果以及 check in 一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>📒计组HomeWork</title>
    <link href="http://yoursite.com/2018/05/20/homework/"/>
    <id>http://yoursite.com/2018/05/20/homework/</id>
    <published>2018-05-20T07:41:01.007Z</published>
    <updated>2018-03-19T16:13:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于思路"><a href="#关于思路" class="headerlink" title="关于思路:"></a>关于思路:</h2><blockquote><p>针对于亲缘关系中如何找出与自己关系最近的10个人，当我们需要自己给出一个数据集，需要设置一些特征值，然后根据不同的特征值赋上不同的权重值，通过计算最后的Total,每个人不同的得分，最后进行排序,取得前10个人的成绩，定义为与自己关系最近的10个人。</p></blockquote><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li><b>确定个人的特征值</b>，其中包括levelRelation(关系层级)、isCouple(是否为情侣)、isParent(是否为父母)、isGrandParent(是否为祖父母)、isUncleOrAunt(是否为叔叔/阿姨)、isBrotherOrSister(是否为哥哥/姐姐)、phoneTime(电话时长)。</li></ul><p>例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//提前給定一些人特征</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; data = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"levelRelation"</span>, <span class="number">2</span>);</span><br><span class="line">map.put(<span class="string">"isCouple"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isBrotherOrSister"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isParent"</span>, <span class="keyword">true</span>);</span><br><span class="line">map.put(<span class="string">"isGrandParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isUncleOrAunt"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"phoneTime"</span>, Math.random() * <span class="number">10</span>);</span><br><span class="line">data.add(map);</span><br></pre></td></tr></table></figure></p><ul><li><b>获取总时长</b>,分配每个人在通话时间上的权重值</li></ul><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;String, Object&gt;&gt; database = ALL.get(i);</span><br><span class="line">Map&lt;String,Object&gt; dataMap = database.get(i);</span><br><span class="line">Object  time = dataMap.get(<span class="string">"phoneTime"</span>);</span><br></pre></td></tr></table></figure><ul><li><b>获取每个人的总得分</b>,前提引入在isCouple,isParent,isGrandParent,isBrotherOrSister,isUncleOrAunt中分别分配了8，8，7，6，4，再加上之前的phoneTime的分数，此刻求出每个人的Total总得分。</li></ul><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">      <span class="comment">//遍历所有人</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; database = ALL.get(i);</span><br><span class="line">Map&lt;String,Object&gt; dataMap = database.get(i);</span><br><span class="line"><span class="comment">//获取所有人的信息值</span></span><br><span class="line">Object levelRelation = dataMap.get(<span class="string">"levelRelation"</span>);</span><br><span class="line">Object isCouple = dataMap.get(<span class="string">"isCouple"</span>);</span><br><span class="line">Object isBrotherOrSister = dataMap.get(<span class="string">"isBrotherOrSister"</span>);</span><br><span class="line">Object isParent = dataMap.get(<span class="string">"isParent"</span>);</span><br><span class="line">Object isGrandParent = dataMap.get(<span class="string">"isGrandParent"</span>);</span><br><span class="line">Object isUncleOrAunt = dataMap.get(<span class="string">"isUncleOrAunt"</span>);</span><br><span class="line">Object time = dataMap.get(<span class="string">"phoneTime"</span>);</span><br><span class="line">      <span class="comment">//总得分</span></span><br><span class="line">      <span class="comment">//Total</span></span><br><span class="line"><span class="keyword">int</span> b = Integer.parseInt(String.valueOf(time));</span><br><span class="line">total = total + b;</span><br><span class="line"><span class="comment">//获取所有人的总时间数据</span></span><br><span class="line">allPeopleTotal.add(total);</span><br></pre></td></tr></table></figure><ul><li><b>排序算法</b>,对所有得分进行排序然后输出前10，即在定义上找出与自己最近的10个人。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于思路&quot;&gt;&lt;a href=&quot;#关于思路&quot; class=&quot;headerlink&quot; title=&quot;关于思路:&quot;&gt;&lt;/a&gt;关于思路:&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;针对于亲缘关系中如何找出与自己关系最近的10个人，当我们需要自己给出一个数据集，需要设置一些特
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>✌Hello World</title>
    <link href="http://yoursite.com/2018/05/20/hello-world/"/>
    <id>http://yoursite.com/2018/05/20/hello-world/</id>
    <published>2018-05-20T07:41:00.992Z</published>
    <updated>2018-03-13T11:54:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h1 id="STARTEMMMM"><a href="#STARTEMMMM" class="headerlink" title="STARTEMMMM"></a>STARTEMMMM</h1><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h1 id="临时储存代码"><a href="#临时储存代码" class="headerlink" title="临时储存代码"></a>临时储存代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> z=<span class="number">0</span>;</span><br><span class="line">        String []a = &#123;<span class="string">"f"</span>,<span class="string">"e"</span>,<span class="string">"d"</span>&#125;;</span><br><span class="line">        String []f = &#123;<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"d"</span>&#125;;</span><br><span class="line">        List&lt;String&gt; c = Arrays.asList(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);  </span><br><span class="line">        List&lt;String&gt; d = Arrays.asList(<span class="string">"2"</span>,<span class="string">"1"</span>,<span class="string">"4"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;c.size();m++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d.contains(c.get(m)) ==<span class="keyword">true</span>)&#123;</span><br><span class="line">        z=z+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//System.out.println(z);</span></span><br><span class="line">        <span class="comment">//System.out.println(c);</span></span><br><span class="line">        &#125;        </span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//        for(int i=0;i&lt;a.length;i++)&#123;</span></span><br><span class="line"><span class="comment">//        for(int j=0;j&lt;f.length;j++)&#123;</span></span><br><span class="line"><span class="comment">//        if(a[i] == f[j])&#123;</span></span><br><span class="line"><span class="comment">//        int t=0;</span></span><br><span class="line"><span class="comment">//        t = t+1;</span></span><br><span class="line"><span class="comment">//        System.out.println(t);</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"># 临时存代码</span><br><span class="line">```Java</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">relationTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; data = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"levelRelation"</span>, <span class="number">2</span>);</span><br><span class="line">map.put(<span class="string">"isCouple"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isBrotherOrSister"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isParent"</span>, <span class="keyword">true</span>);</span><br><span class="line">map.put(<span class="string">"isGrandParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isUncleOrAunt"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"phoneTime"</span>, Math.random() * <span class="number">10</span>);</span><br><span class="line">data.add(map);</span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; data1 = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">Map&lt;String, Object&gt; map1 = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map1.put(<span class="string">"levelRelation"</span>, <span class="number">1</span>);</span><br><span class="line">map1.put(<span class="string">"isCouple"</span>, <span class="keyword">true</span>);</span><br><span class="line">map.put(<span class="string">"isBrotherOrSister"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"isParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"isGrandParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"isUncleOrAunt"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"phoneTime"</span>, Math.random() * <span class="number">10</span>);</span><br><span class="line">data1.add(map);</span><br><span class="line"></span><br><span class="line">List&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt; ALL = <span class="keyword">new</span> ArrayList&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt;();</span><br><span class="line">ALL.add(data);</span><br><span class="line">ALL.add(data1);</span><br><span class="line"><span class="comment">// System.out.println(ALL);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ALL.size(); i++)&#123;</span><br><span class="line"><span class="comment">//遍历所有人</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; database = ALL.get(i);</span><br><span class="line">Map&lt;String,Object&gt; dataMap = database.get(i);</span><br><span class="line"><span class="comment">//获取所有人的信息值</span></span><br><span class="line">Object levelRelation = dataMap.get(<span class="string">"levelRelation"</span>);</span><br><span class="line">Object isCouple = dataMap.get(<span class="string">"isCouple"</span>);</span><br><span class="line">Object isBrotherOrSister = dataMap.get(<span class="string">"isBrotherOrSister"</span>);</span><br><span class="line">Object isParent = dataMap.get(<span class="string">"isParent"</span>);</span><br><span class="line">Object isGrandParent = dataMap.get(<span class="string">"isGrandParent"</span>);</span><br><span class="line">Object isUncleOrAunt = dataMap.get(<span class="string">"isUncleOrAunt"</span>);</span><br><span class="line">Object time = dataMap.get(<span class="string">"phoneTime"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object a = map.get("isCouple");</span></span><br><span class="line"><span class="comment">// Object b = map.get("phoneTime");</span></span><br><span class="line"><span class="comment">// System.out.println(b);</span></span><br><span class="line"><span class="comment">// System.out.println(a);</span></span><br><span class="line"><span class="comment">// System.out.println(data);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">relationTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="comment">//提前給定一些人特征</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; data = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"levelRelation"</span>, <span class="number">2</span>);</span><br><span class="line">map.put(<span class="string">"isCouple"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isBrotherOrSister"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isParent"</span>, <span class="keyword">true</span>);</span><br><span class="line">map.put(<span class="string">"isGrandParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isUncleOrAunt"</span>, <span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"phoneTime"</span>, Math.random() * <span class="number">10</span>);</span><br><span class="line">data.add(map);</span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; data1 = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">Map&lt;String, Object&gt; map1 = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map1.put(<span class="string">"levelRelation"</span>, <span class="number">1</span>);</span><br><span class="line">map1.put(<span class="string">"isCouple"</span>,<span class="keyword">false</span>);</span><br><span class="line">map.put(<span class="string">"isBrotherOrSister"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"isParent"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"isGrandParent"</span>, <span class="keyword">true</span>);</span><br><span class="line">map1.put(<span class="string">"isUncleOrAunt"</span>, <span class="keyword">false</span>);</span><br><span class="line">map1.put(<span class="string">"phoneTime"</span>, Math.random() * <span class="number">10</span>);</span><br><span class="line">data1.add(map);</span><br><span class="line"></span><br><span class="line">List&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt; ALL = <span class="keyword">new</span> ArrayList&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt;();</span><br><span class="line">ALL.add(data);</span><br><span class="line">ALL.add(data1);</span><br><span class="line"> System.out.println(ALL);</span><br><span class="line"> <span class="comment">//获取总时间</span></span><br><span class="line"><span class="comment">// int init = 0;</span></span><br><span class="line"><span class="comment">// for(int i =0;i&lt;=ALL.size();i++)&#123;</span></span><br><span class="line"><span class="comment">// List&lt;Map&lt;String, Object&gt;&gt; database = ALL.get(i);</span></span><br><span class="line"><span class="comment">// Map&lt;String,Object&gt; dataMap = database.get(i);</span></span><br><span class="line"><span class="comment">// Object  time = dataMap.get("phoneTime");</span></span><br><span class="line"><span class="comment">// int time1 = Integer.parseInt(time==null?"":time.toString());</span></span><br><span class="line"><span class="comment">// init = time1 +init;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//         System.out.println(init);</span></span><br><span class="line">         </span><br><span class="line">         List&lt;Integer&gt;allPeopleTotal = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ALL.size(); i++)&#123;</span><br><span class="line"><span class="comment">//遍历所有人</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; database = ALL.get(i);</span><br><span class="line">Map&lt;String,Object&gt; dataMap = database.get(i);</span><br><span class="line"><span class="comment">//获取所有人的信息值</span></span><br><span class="line">Object levelRelation = dataMap.get(<span class="string">"levelRelation"</span>);</span><br><span class="line">Object isCouple = dataMap.get(<span class="string">"isCouple"</span>);</span><br><span class="line">Object isBrotherOrSister = dataMap.get(<span class="string">"isBrotherOrSister"</span>);</span><br><span class="line">Object isParent = dataMap.get(<span class="string">"isParent"</span>);</span><br><span class="line">Object isGrandParent = dataMap.get(<span class="string">"isGrandParent"</span>);</span><br><span class="line">Object isUncleOrAunt = dataMap.get(<span class="string">"isUncleOrAunt"</span>);</span><br><span class="line">Object time = dataMap.get(<span class="string">"phoneTime"</span>);</span><br><span class="line"><span class="comment">//每个人总得分</span></span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">boolean</span>) isCouple ==<span class="keyword">true</span>)&#123;</span><br><span class="line">total = total + <span class="number">8</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">boolean</span>)isParent == <span class="keyword">true</span>)&#123;</span><br><span class="line">total = total + <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">boolean</span>)isGrandParent == <span class="keyword">true</span>)&#123;</span><br><span class="line">total = total +<span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">boolean</span>)isBrotherOrSister == <span class="keyword">true</span>)&#123;</span><br><span class="line">total = total +<span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">boolean</span>)isUncleOrAunt ==<span class="keyword">true</span>)&#123;</span><br><span class="line">    total = total +<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Total</span></span><br><span class="line">    <span class="keyword">int</span> b = Integer.parseInt(String.valueOf(time));</span><br><span class="line">        total = total + b;</span><br><span class="line">        <span class="comment">//获取所有人的总时间数据</span></span><br><span class="line">        allPeopleTotal.add(total);</span><br><span class="line">    <span class="comment">//System.out.println(total);</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//对所有得分进行排序</span></span><br><span class="line">    Collections.sort(allPeopleTotal);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    System.out.println(allPeopleTotal);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object a = map.get("isCouple");</span></span><br><span class="line"><span class="comment">// Object b = map.get("phoneTime");</span></span><br><span class="line"><span class="comment">// System.out.println(b);</span></span><br><span class="line"><span class="comment">// System.out.println(a);</span></span><br><span class="line"><span class="comment">// System.out.println(data);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><hr><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><ul><li>1</li><li>2</li><li>3</li></ul><blockquote><p>引用</p><!-- >     用代码 --><p><strong>加粗</strong><br><strong>加粗文体</strong><br><em>斜体</em></p></blockquote><p><i>sadaskdhkjhkdsah</i></p><p><br>_斜体_<br><br><del>删除文</del></p><p>&lt;<a href="http://www.baidu.com&gt;" target="_blank" rel="noopener">www.baidu.com&gt;</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sad</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">é&gt;&gt; y = <span class="number">0</span>;</span><br><span class="line">&gt;&gt; <span class="keyword">for</span> n = <span class="number">1</span>:<span class="number">10000000</span></span><br><span class="line">s= (<span class="number">-1</span>)^(n+<span class="number">1</span>)/(<span class="number">2</span>*n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">abs</span>(s) &gt;<span class="number">10</span>^<span class="number">-6</span></span><br><span class="line">y = y+s;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>💧关于LB</title>
    <link href="http://yoursite.com/2018/03/09/lb/"/>
    <id>http://yoursite.com/2018/03/09/lb/</id>
    <published>2018-03-09T03:10:03.000Z</published>
    <updated>2018-06-20T07:34:29.085Z</updated>
    
    <content type="html"><![CDATA[<p>“ 不知道说些什么 “</p><p>“ 最近爱吃橙子了 “</p><p>“ …………………. “</p><p>“ 最近有点累🤡L “</p><p>“ 开始学 opencv 了 “</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;“ 不知道说些什么 “&lt;/p&gt;
&lt;p&gt;“ 最近爱吃橙子了 “&lt;/p&gt;
&lt;p&gt;“ …………………. “&lt;/p&gt;
&lt;p&gt;“ 最近有点累🤡L “&lt;/p&gt;
&lt;p&gt;“ 开始学 opencv 了 “&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
